version: "3.2"

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx1G -Xms1G"
      ELASTIC_PASSWORD: elasticpassword
      discovery.type: single-node
    networks:
      - elk

  apm-server:
      build:
        context: apm-server/
        args:
          ELK_VERSION: $ELK_VERSION
      command:
        - --strict.perms=false
      volumes:
        - type: bind
          source: ./apm-server/config/apm-server.yml
          target: /usr/share/apm-server/apm-server.yml
          read_only: true
      ports:
        - "8200:8200"
      networks:
        - elk
      depends_on:
        - elasticsearch

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx1G -Xms1G"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
  
  server-web:
    image: nginx:1.21.3-alpine
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - elk
    depends_on:
      - logstash

  flask:
    build: .
    depends_on:
      - server-web
      - postgres
    networks:
      - elk

  postgres:
    image: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  postgres-data:
